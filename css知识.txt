一、css选择器
1.css选择器
id选择器 class选择器 标签选择器 属性选择器 子代选择器 后代选择器 兄弟选择器 相邻选择器 通配符选择器

2.css注释
/**/

3.css书写方式
行内样式 标签中
内部样式  head中
外部样式 link引入	

4.选择器优先级
id>class>*
行内样式>内部样式>外部样式

二、盒模型解析
1.标准盒模型的计算公式=外边距+内边距+内容+边框线
2.怪异盒模型 box-sizing：border-box 设置的padding+margin+border不计入盒子宽高度

三、元素的显示类型与转化
1.为什么样式初始化
（1）浏览器差异 不同浏览器有些标签的默认值是不同的，如果没对css初始化会出现浏览器之间的页面显示差异
（2）提高编码质量，整个页面做完，重复的css样式会很多，初始化样式之后，减少代码重复量。
body,p,ul,ol,dl,dt,dd,h1,h2,h3,h4,h5,h6{margin:0;padding:0;}
ul,ol{list-style:none;}
img{border:0px;}
a{text-decoration:none;color:#222;}
2.通配符的弊端
浏览器解析通配符会把每一个标签解析一遍，这样会延迟渲染时间，所以我们要设置哪个标签，就写哪个标签。

3.元素特性
(1)块级元素
独占一行
宽度默认100%支持宽高设置
支持内边距外边距 margin:auto有效
可以内嵌内联元素和块级元素
p标签不支持内嵌元素
div p form ul ol h1 table

(2)行内元素
与其他内联元素同处一行。
不支持宽高设置。
外边距上下无效，左右有效，内边距有效
a标签可以嵌套内联、块级元素。
标签之间间隔被解析
span a  em i strong
(3)行内块元素
元素横排显示
宽高被内容撑开
支持内边、外边距 margin：auto无效
标签间隔被解析
img input li button

间隔解析解决方法
父元素文字大小设置为0
子元素从新设置文字大小

5.垂直对齐方式、背景background、css圆角
vertical-align:middle top bottom
background:背景颜色 背景图片 是否平铺 背景固定  水平垂直对齐方式
border-radius：

6.文字样式
color line-hieght font-style font-family  font-size font-weight

7.float浮动
元素脱离文档流，按照指定方向发生移动，遇到父级元素边界和相邻元素的浮动元素停下来。
元素在文档中不占位置，会导致父盒子高度塌陷。

解决方案
<div style="clear:both"></div>

8.定位
相对定位
元素相对与自身没有定位时的位置发生偏移
不使元素脱离文档流
不改变元素的特性
绝对定位	

相对于已经定位的父元素发生位移
元素脱离文档流	
行内元素支持宽高
块级元素内容撑开
没有父级元素默认是相对body
与相对定位元素配合使用
绝对定位的位置相对与已经定位的最近的祖先元素
margin:auto无效

position：fixed 相对于浏览器窗口定位	

z-index
表示元素在页面上层级的上下关系。
值可以是正数和负数，值越大，元素越在上面。
只有定位的元素才有效。
只能同级元素对比。	

过渡
元素属性变化，是一个持续时间的过程，而不是立即执行
元素的属性名称
属性变化的持续时间
变化的速率
动画
动画是指从一个css描述样式到另一个css描述样式的制作动画过程，
动画的两个组件是，第一个组件是动画的css描述样式，第二个组件是动画样式从开始到结束状态的关键帧

变换
rotate skew translate sacle



	